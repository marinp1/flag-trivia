{"version":3,"sources":["Components/Utils/ComboBox/Styled.ts","Components/Utils/ComboBox/index.tsx","Components/Utils/Button/Styled.ts","Components/Utils/Button/index.tsx","Components/Utils/ProgressBar/Styled.ts","Components/Utils/ProgressBar/index.tsx","Components/Utils/index.tsx","Components/Header/Styled.ts","Components/Header/index.tsx","Components/Landing/Styled.ts","utils/index.ts","Components/Landing/index.tsx","Flags.tsx","Components/Game/index.tsx","Components/Settings/Styled.ts","Components/Settings/index.tsx","theme/globalStyle.tsx","translations/index.tsx","Styled.ts","App.tsx","serviceWorker.ts","index.tsx","Components/Game/Styled.ts","theme/styled.ts","theme/index.ts"],"names":["Title","styled","h3","Container","div","props","theme","colors","border","borderRadius","smallBoxShadow","Selection","elements","color1","color2","tag","background","primary","content","undefined","selected","ComboBox","title","selection","choices","setSelection","Fragment","Styled","map","choice","extra","key","className","onClick","value","Button","button","children","text","progress","toFixed","statusText","Progress","highlight","ProgressBar","withRouter","translations","rest","general","history","push","breakpoints","tablet","GridCell","name","ButtonCell","GameModeInfo","h5","FLAG_ISO_CODES_ALL","Object","keys","countries","GAME_MODES","REGIONS","COUNTRIES","LANG_FLAG","fi","en","FLAG_ISO_CODES_BY_REGION","filter","region","reduce","prev","cur","_","pickBy","country","world","Landing","landing","React","useState","selectedRegion","selectRegion","selectedMode","selectMode","length","gameMode","mode","LazyFlags","code","process","crypto","createHash","update","digest","getHash","Question","lazy","Loading","match","questions","setQuestions","questionNumber","setQuestionNumber","correct","setCorrect","incorrect","setIncorrect","imageData","setImageData","toastId","useRef","preloadedImages","preloadImage","a","answer","current","data","img","Image","src","onload","useEffect","includes","params","ANSWER_FLAGS","ANSWER_ARRAY","CHOICE_ARRAY","FLAGS","shuffle","CHOICES","getChoices","randomFlag","random","Array","ind","generateQuestions","prevCode","game","language","getLanguage","headerText","String","formatString","Suspense","fallback","answerQuestion","wasCorrect","answerName","correctName","ToastContent","ToastContainer","toast","render","autoClose","position","onClose","getStylePerProps","open","width","hamburgerTop","boxShadow","mobile","Module","HeaderBar","HamburgerMenu","toggle","extraClassName","concat","join","type","aria-label","aria-controls","aria-expanded","Settings","__settings__","settings","__theme__","__lang__","lang","swipe","settingsOpen","onTouchStart","e","touch","touches","x","clientX","onTouchMove","changedTouches","swiping","onTouchEnd","xDiff","setSettingsStatus","APP_THEME_NAMES","themeName","selectTheme","selectedTheme","getAvailableLanguages","selectLanguage","globalStyle","css","desktop","LocalizedStrings","light","dark","africa","asia","europe","americas","oceania","similar","AppContainer","App","currentTheme","setTheme","forceUpdate","set","useForceUpdate","changeLanguage","useCallback","setLanguage","getThemeByName","styles","style","gridArea","padding","maxWidth","path","exact","from","to","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","QuestonContainer","QuestionFlagContainer","QuestionChoiceContainer","FlagContainer","ChoiceContainer","APP_THEMES","currentThemeName","localStorage","getItem"],"mappings":"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","file":"static/js/main.56d94433.chunk.js","sourcesContent":["import styled from '../../../theme/styled';\n\nconst Title = styled.h3`\n  font-weight: bold;\n  margin-bottom: 0.75rem;\n`;\n\nconst Container = styled.div`\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.smallBoxShadow};\n`;\n\ninterface TagContent {\n  content: string | number;\n  selected?: boolean;\n}\n\nconst Selection = styled.div<{ tag?: TagContent }>`\n  user-select: none;\n  cursor: pointer;\n  font-weight: normal;\n  padding: 1rem;\n  border-bottom: 1px solid ${props => props.theme.colors.border};\n  background: ${props => props.theme.elements.color1};\n  position: relative;\n  &.selected {\n    font-weight: bolder;\n  }\n  &:first-child {\n    border-top-left-radius: ${props => props.theme.borderRadius};\n    border-top-right-radius: ${props => props.theme.borderRadius};\n  }\n  &:last-child {\n    border-bottom-left-radius: ${props => props.theme.borderRadius};\n    border-bottom-right-radius: ${props => props.theme.borderRadius};\n    border-bottom: none;\n  }\n  &:nth-child(2n + 1) {\n    background: ${props => props.theme.elements.color2};\n  }\n  :hover {\n    filter: brightness(95%);\n  }\n  :active {\n    filter: brightness(90%);\n  }\n  &::after {\n    display: ${props => (props.tag ? 'inline-block' : 'none')};\n    position: absolute;\n    right: 1rem;\n    top: 50%;\n    transform: translateY(-50%);\n    border: 1px solid ${props => props.theme.colors.border};\n    border-radius: ${props => props.theme.borderRadius};\n    box-shadow: ${props => props.theme.smallBoxShadow};\n    background: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.primary};\n    padding: 0.25rem 0.5rem;\n    text-align: center;\n    content: ${props => (props.tag ? `'${props.tag.content}'` : undefined)};\n    font-weight: ${props =>\n      props.tag && props.tag.selected ? 'bolder' : 'normal'};\n  }\n`;\n\nexport default {\n  Title,\n  Container,\n  Selection,\n};\n","import React from 'react';\n\nimport Styled from './Styled';\n\ninterface Choice<T> {\n  key: T;\n  value: string | number;\n  extra?: string | number;\n}\n\ninterface Props<T> {\n  title?: any;\n  selection: T;\n  choices: Choice<T>[];\n  setSelection: (selectedValue: T) => void;\n}\n\nfunction ComboBox<T extends string | number>(props: Props<T>) {\n  const { title, selection, choices, setSelection } = props;\n\n  return (\n    <React.Fragment>\n      {title && <Styled.Title>{title}</Styled.Title>}\n      <Styled.Container>\n        {choices.map((choice: Choice<T>) => (\n          <React.Fragment>\n            <Styled.Selection\n              tag={choice.extra ? { content: choice.extra } : undefined}\n              key={`cb-choice-${choice.key}`}\n              className={choice.key === selection ? 'selected' : undefined}\n              onClick={() => setSelection(choice.key)}\n            >\n              {choice.value}\n            </Styled.Selection>\n          </React.Fragment>\n        ))}\n      </Styled.Container>\n    </React.Fragment>\n  );\n}\n\nexport default ComboBox;\n","import styled from '../../../theme/styled';\n\nconst Button = styled.button`\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.borderRadius};\n  box-shadow: ${props => props.theme.smallBoxShadow};\n  background: ${props => props.theme.elements.color1};\n  padding: 1rem;\n  box-sizing: border-box;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.primary};\n  width: 100%;\n  cursor: pointer;\n  :hover {\n    filter: brightness(95%);\n  }\n  :active {\n    filter: brightness(90%);\n  }\n`;\n\nexport default {\n  Button,\n};\n","import React, { FunctionComponent } from 'react';\nimport Styled from './Styled';\n\ninterface Props {\n  onClick: () => void;\n}\n\nconst Button: React.FC<Props> = props => {\n  return (\n    <Styled.Button onClick={props.onClick}>{props.children}</Styled.Button>\n  );\n};\n\nexport default Button;\n","import styled from '../../../theme/styled';\n\ninterface Props {\n  text: string;\n  progress: number;\n  statusText: string;\n}\n\nconst Container = styled.div<Props>`\n  position: relative;\n  width: 100%;\n  box-sizing: border-box;\n  height: 2.5rem;\n  background: ${props => props.theme.elements.color2};\n  border-radius: ${props => props.theme.borderRadius};\n  padding: 0.2rem;\n  box-shadow: ${props => props.theme.smallBoxShadow};\n  &::before {\n    font-size: 80%;\n    z-index: 99;\n    padding: 0.2rem 0.4rem;\n    border-radius: ${props => props.theme.borderRadius};\n    background: ${props => props.theme.colors.background};\n    opacity: 0.5;\n    display: inline-block;\n    position: absolute;\n    left: 0.5rem;\n    top: 50%;\n    color: ${props => props.theme.colors.primary};\n    transform: translateY(-50%);\n    content: ${props =>\n      `'${props.text} (${(props.progress * 100).toFixed(2)}%)'`};\n  }\n  &::after {\n    font-size: 80%;\n    z-index: 99;\n    display: inline-block;\n    padding: 0.2rem 0.4rem;\n    border-radius: ${props => props.theme.borderRadius};\n    background: ${props => props.theme.colors.background};\n    opacity: 0.5;\n    position: absolute;\n    right: 0.5rem;\n    top: 50%;\n    color: ${props => props.theme.colors.primary};\n    transform: translateY(-50%);\n    content: ${props => `'${props.statusText}'`};\n  }\n`;\n\n// Progress between 0 and 1;\nconst Progress = styled.div<{ progress: number }>`\n  height: 100%;\n  box-sizing: border-box;\n  background: ${props => props.theme.colors.highlight};\n  border-radius: ${props => props.theme.borderRadius};\n  border: ${props =>\n    props.progress > 0 ? `1px solid ${props.theme.colors.border}` : 'none'};\n  transition: width 0.5s;\n  width: ${props => `${(props.progress * 100).toFixed(2)}%`};\n  position: relative;\n`;\n\nexport default {\n  Container,\n  Progress,\n};\n","import React from 'react';\nimport Styled from './Styled';\n\nconst ProgressBar = ({\n  text,\n  progress,\n  statusText,\n}: {\n  text: string;\n  progress: number;\n  statusText: string;\n}) => {\n  return (\n    <Styled.Container text={text} progress={progress} statusText={statusText}>\n      <Styled.Progress progress={progress} />\n    </Styled.Container>\n  );\n};\nexport default ProgressBar;\n","import ComboBox from './ComboBox';\nimport Button from './Button';\nimport ProgressBar from './ProgressBar';\n\nexport { ComboBox, Button, ProgressBar };\n","import styled from '../../theme/styled';\n\nconst Container = styled.div`\n  grid-area: header;\n  position: sticky;\n  top: 0;\n  padding-left: 2rem;\n  padding-right: 2rem;\n  background: ${props => props.theme.colors.background};\n  padding-top: 2rem;\n  h1 {\n    cursor: pointer;\n    font-weight: bold;\n    text-transform: uppercase;\n    padding-bottom: 0.25rem;\n  }\n  box-shadow: ${props => props.theme.smallBoxShadow};\n  padding-bottom: 1rem;\n  margin-bottom: 1rem;\n`;\n\nexport default {\n  Container,\n};\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Styled from './Styled';\n\nimport Translations from '../../translations';\n\ntype Props = {\n  translations: typeof Translations;\n} & RouteComponentProps;\n\nconst Header: React.FC<Props> = ({ translations, ...rest }) => {\n  const { general } = translations;\n  return (\n    <Styled.Container onClick={() => rest.history.push(`/`)}>\n      <h1>{general['application-name']}</h1>\n      <h6>\n        <i>{general['application-tagline']}</i>\n      </h6>\n    </Styled.Container>\n  );\n};\n\nexport default withRouter(Header);\n","import styled from '../../theme/styled';\nimport { breakpoints } from '../../theme';\n\ntype GridCell = 'region' | 'mode' | 'space' | 'button';\n\nconst Container = styled.div`\n  display: grid;\n  width: 100%;\n  max-width: 800px;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content;\n  grid-template-areas:\n    'region'\n    'mode'\n    'button';\n  grid-row-gap: 2rem;\n  grid-column-gap: 2rem;\n  ${breakpoints.tablet} {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto;\n    grid-template-areas:\n      'region mode'\n      'button button';\n  }\n`;\n\ninterface GridCellProps {\n  name: GridCell;\n}\n\nconst GridCell = styled.div<GridCellProps>`\n  grid-area: ${props => props.name};\n`;\n\nconst ButtonCell = styled.div<GridCellProps>`\n  align-self: end;\n  ${breakpoints.tablet} {\n    grid-column-start: 1;\n    grid-column-end: span 2;\n  }\n`;\n\nconst GameModeInfo = styled.h5`\n  padding-top: 1rem;\n`;\n\nexport default {\n  Container,\n  GridCell,\n  ButtonCell,\n  GameModeInfo,\n};\n","import _ from 'lodash';\nimport countries from '../resources/countries.json';\nimport { FLAG_ISO_CODE, FLAG_ISO_CODE_BY_REGION, Region } from '../types';\n\nexport const FLAG_ISO_CODES_ALL = Object.keys(countries) as FLAG_ISO_CODE[];\n\nexport const GAME_MODES = <const>['random', 'similar', 'region'];\nexport const REGIONS = <const>[\n  'world',\n  'africa',\n  'asia',\n  'europe',\n  'americas',\n  'oceania',\n];\n\nexport const COUNTRIES = countries as {\n  [code in FLAG_ISO_CODE]: {\n    region: Region;\n    name: {\n      fi: string;\n      en: string;\n    };\n  };\n};\n\nexport const LANG_FLAG: {\n  en: string;\n  fi: string;\n} = {\n  fi: '🇫🇮',\n  en: '🇬🇧',\n};\n\nexport const FLAG_ISO_CODES_BY_REGION = REGIONS.filter(\n  region => region !== 'world',\n).reduce(\n  (prev, cur) => ({\n    ...prev,\n    [cur]: Object.keys(_.pickBy(COUNTRIES, country => country.region === cur)),\n  }),\n  {\n    world: FLAG_ISO_CODES_ALL,\n  },\n) as FLAG_ISO_CODE_BY_REGION;\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport Styled from './Styled';\n\nimport Translations from '../../translations';\n\nimport { Button, ComboBox } from '../Utils';\n\nimport { FLAG_ISO_CODES_BY_REGION, REGIONS, GAME_MODES } from '../../utils';\nimport { Region, GameMode } from '../../types';\n\ntype Props = {\n  translations: typeof Translations;\n} & RouteComponentProps;\n\nconst Landing: React.FC<Props> = ({ translations, ...rest }) => {\n  const { landing } = translations;\n  const [selectedRegion, selectRegion] = React.useState<Region>('world');\n  const [selectedMode, selectMode] = React.useState<GameMode>('random');\n  return (\n    <Styled.Container>\n      <Styled.GridCell name=\"region\">\n        <ComboBox<Region>\n          title={landing['select-region-label']}\n          selection={selectedRegion}\n          choices={REGIONS.map(region => ({\n            key: region,\n            value: landing.region[region],\n            extra: FLAG_ISO_CODES_BY_REGION[region].length,\n          }))}\n          setSelection={selectRegion}\n        />\n      </Styled.GridCell>\n      <Styled.GridCell name=\"mode\">\n        <ComboBox<GameMode>\n          title={landing['select-mode-label']}\n          selection={selectedMode}\n          choices={GAME_MODES.map(gameMode => ({\n            key: gameMode,\n            value: landing.mode[gameMode],\n          }))}\n          setSelection={selectMode}\n        />\n        <Styled.GameModeInfo>\n          {landing['select-mode-info-label'][selectedMode]}\n        </Styled.GameModeInfo>\n      </Styled.GridCell>\n      <Styled.ButtonCell name=\"button\">\n        <Button\n          onClick={() =>\n            rest.history.push(`/quiz/${selectedMode}/${selectedRegion}`)\n          }\n        >\n          {landing['start-new-game-label']}\n        </Button>\n      </Styled.ButtonCell>\n    </Styled.Container>\n  );\n};\n\nexport default Landing;\n","import crypto from 'crypto';\nimport { FLAG_ISO_CODE } from './types';\nimport { FLAG_ISO_CODES_ALL } from './utils';\n\nconst getHash = (code: FLAG_ISO_CODE) =>\n  crypto\n    .createHash('sha256')\n    .update(`${code}.svg`)\n    .digest('hex');\n\nconst LazyFlags = FLAG_ISO_CODES_ALL.reduce(\n  (prev, code) => ({\n    ...prev,\n    [code]: `${process.env.PUBLIC_URL}/flags/${getHash(code)}.svg`,\n  }),\n  {},\n) as {\n  [flag in FLAG_ISO_CODE]: string;\n};\n\nexport default LazyFlags;\n","import React from 'react';\nimport _ from 'lodash';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport LazyFlags from '../../Flags';\n\nimport { ProgressBar } from '../Utils';\n\nimport Styled from './Styled';\n\nimport {\n  FLAG_ISO_CODES_BY_REGION,\n  COUNTRIES,\n  REGIONS,\n  GAME_MODES,\n} from '../../utils';\n\nimport { FLAG_ISO_CODE, Region, GameMode } from '../../types';\n\nimport Translations, { LANGUAGES } from '../../translations';\n\nconst Question = React.lazy(() => import('./Question'));\n\nconst CHOICE_COUNT = 4;\n\nconst Loading = () => {\n  return <h1>Loading...</h1>;\n};\n\ninterface IQuestion {\n  answer: FLAG_ISO_CODE;\n  choices: FLAG_ISO_CODE[];\n}\n\nconst generateQuestions = (\n  ANSWER_ARRAY: FLAG_ISO_CODE[],\n  CHOICE_ARRAY: FLAG_ISO_CODE[],\n): IQuestion[] => {\n  const FLAGS = _.shuffle(ANSWER_ARRAY);\n  const CHOICES = _.shuffle(CHOICE_ARRAY);\n  const pickRandom = () => CHOICES[_.random(0, CHOICES.length - 1)];\n\n  const getChoices = (answer: FLAG_ISO_CODE): FLAG_ISO_CODE[] => {\n    const choices = [answer];\n    while (choices.length < CHOICE_COUNT) {\n      const randomFlag = pickRandom();\n      if (!choices.includes(randomFlag)) {\n        choices.push(randomFlag);\n      }\n    }\n    return _.shuffle(choices);\n  };\n\n  return [...new Array(ANSWER_ARRAY.length)].map((a, ind) => ({\n    answer: FLAGS[ind],\n    choices: getChoices(FLAGS[ind]),\n  }));\n};\n\ntype Props = {\n  translations: typeof Translations;\n} & RouteComponentProps<{ mode: GameMode; region: Region }>;\n\nconst Game: React.FC<Props> = ({ translations, ...rest }) => {\n  const { match } = rest;\n  const [questions, setQuestions] = React.useState<IQuestion[]>([]);\n\n  const [questionNumber, setQuestionNumber] = React.useState(-1);\n  const [correct, setCorrect] = React.useState(0);\n  const [incorrect, setIncorrect] = React.useState(0);\n  const [imageData, setImageData] = React.useState<string>();\n\n  const toastId = React.useRef<string | undefined>(undefined);\n\n  const preloadedImages = React.useRef<\n    Partial<{ [code in FLAG_ISO_CODE]: any }>\n  >({});\n\n  const preloadImage = async (questionNumber: number) => {\n    if (questionNumber >= questions.length || questionNumber < 0) {\n      return;\n    }\n    const code = questions[questionNumber].answer;\n    if (!preloadedImages.current[code]) {\n      const data = LazyFlags[code];\n      const img = new Image();\n      img.src = data;\n      img.onload = () => {\n        if (questionNumber === 0) {\n          setImageData(data);\n        }\n        preloadedImages.current[code] = data;\n      };\n    }\n  };\n\n  const nextQuestion = (prevCorrect: boolean) => {\n    if (prevCorrect) {\n      setCorrect(correct + 1);\n    } else {\n      setIncorrect(incorrect + 1);\n    }\n    setQuestionNumber(questionNumber + 1);\n  };\n\n  const answerQuestion = (answer: FLAG_ISO_CODE) => {\n    const wasCorrect = answer === questions[questionNumber].answer;\n    const src = preloadedImages.current[questions[questionNumber].answer];\n    const answerName = COUNTRIES[answer].name[language];\n    const correctName =\n      COUNTRIES[questions[questionNumber].answer].name[language];\n\n    const ToastContent = () => (\n      <Styled.ToastContainer src={src}>\n        <div />\n        <span>\n          {translations.formatString(\n            translations.game['prev-answer-incorrect-label'],\n            <b>{answerName}</b>,\n            <b>{correctName}</b>,\n          )}\n        </span>\n      </Styled.ToastContainer>\n    );\n\n    if (!wasCorrect) {\n      if (toastId.current) {\n        toast.update('status-toast', {\n          render: <ToastContent />,\n        });\n      } else {\n        toastId.current = 'status-toast';\n        toast(<ToastContent />, {\n          autoClose: 5000,\n          toastId: 'status-toast',\n          position: 'bottom-right',\n          onClose: () => (toastId.current = undefined),\n        });\n      }\n    }\n    nextQuestion(wasCorrect);\n  };\n\n  React.useEffect(() => {\n    if (!GAME_MODES.includes(match.params.mode)) {\n      return;\n    }\n    if (!REGIONS.includes(match.params.region)) {\n      return;\n    }\n    const ANSWER_FLAGS = FLAG_ISO_CODES_BY_REGION[match.params.region];\n    const CHOICE_FLAGS =\n      match.params.mode === 'region'\n        ? ANSWER_FLAGS\n        : FLAG_ISO_CODES_BY_REGION.world;\n    const questions = generateQuestions(ANSWER_FLAGS, CHOICE_FLAGS);\n    setQuestions(questions);\n  }, [match.params.region]);\n\n  React.useEffect(() => {\n    if (questionNumber < 0 || questionNumber >= questions.length) {\n      return;\n    }\n    if (questionNumber >= 1) {\n      setImageData(preloadedImages.current[questions[questionNumber].answer]);\n    }\n    preloadImage(questionNumber + 1);\n    preloadImage(questionNumber + 2);\n    preloadImage(questionNumber + 3);\n    preloadImage(questionNumber + 4);\n    preloadImage(questionNumber + 5);\n    if (questionNumber <= 0) {\n      return;\n    }\n    const prevCode = questions[questionNumber - 1].answer;\n    preloadedImages.current[prevCode] = undefined;\n  }, [questionNumber]);\n\n  React.useEffect(() => {\n    if (questions.length > 0) {\n      preloadImage(0);\n      setCorrect(0);\n      setIncorrect(0);\n      setQuestionNumber(0);\n    }\n  }, [questions]);\n\n  if (questionNumber === -1) {\n    return <h1>{translations.general['loading-text']}</h1>;\n  }\n\n  if (questionNumber >= questions.length) {\n    return (\n      <React.Fragment>\n        <h1>{translations.game['game-over-text']}</h1>\n        <h3>\n          You got {correct} / {questions.length} correct\n        </h3>\n      </React.Fragment>\n    );\n  }\n\n  const language = translations.getLanguage() as LANGUAGES;\n  const headerText = String(\n    translations.formatString(\n      translations.game['question-title-label'],\n      questionNumber + 1,\n      questions.length,\n    ),\n  );\n\n  const statusText = String(\n    translations.formatString<string | number>(\n      translations.game['status-label'],\n      correct,\n      questions.length,\n      ((correct / questions.length) * 100).toFixed(2),\n    ),\n  );\n\n  return (\n    <React.Fragment>\n      <Styled.Container>\n        <Styled.ProgressBar>\n          <ProgressBar\n            text={headerText}\n            progress={questionNumber / questions.length}\n            statusText={statusText}\n          />\n        </Styled.ProgressBar>\n        <React.Suspense fallback={<Loading />}>\n          <Question\n            choices={questions[questionNumber].choices.map(code => ({\n              code,\n              name: COUNTRIES[code].name[language],\n            }))}\n            data={imageData}\n            answerQuestion={answerQuestion}\n          />\n        </React.Suspense>\n      </Styled.Container>\n      <ToastContainer />\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(Game);\n","import styled from '../../theme/styled';\nimport { breakpoints } from '../../theme';\n\ninterface ContainerProps {\n  open: boolean;\n}\n\nconst getStylePerProps = (\n  props: ContainerProps,\n): {\n  width: undefined | React.CSSProperties['width'];\n  hamburgerTop: React.CSSProperties['height'];\n} => {\n  if (props.open) {\n    return {\n      width: '100%',\n      hamburgerTop: 0,\n    };\n  }\n  return {\n    width: undefined,\n    hamburgerTop: '2rem',\n  };\n};\n\nconst Container = styled.div<ContainerProps>`\n  z-index: 99;\n  grid-area: settings;\n  background: ${props => props.theme.colors.highlight};\n  box-shadow: ${props => props.theme.boxShadow};\n  height: 100%;\n  text-transform: uppercase;\n  box-sizing: border-box;\n  h1 {\n    font-weight: bold;\n    margin-bottom: 1.5rem;\n    margin-right: 2rem;\n  }\n  .hamburger {\n    align-self: flex-start;\n    padding: ${props => (props.open ? '15px 0' : '0')};\n    display: ${props => (props.open ? 'block' : 'none')};\n  }\n\n  .hamburger-box {\n    height: ${props => getStylePerProps(props).hamburgerTop};\n    width: 2rem;\n  }\n\n  .hamburger:hover {\n    opacity: 0.8 !important;\n  }\n\n  .hamburger:active {\n    opacity: 0.7 !important;\n  }\n\n  .hamburger-inner,\n  .hamburger-inner::before,\n  .hamburger-inner::after {\n    background-color: ${props => props.theme.colors.primary} !important;\n    width: 2rem;\n    height: 4px;\n  }\n\n  padding: ${props => (props.open ? '2rem' : '2rem 0.5rem')};\n  ${breakpoints.mobile} {\n    padding: 2rem 1.5rem;\n    .hamburger {\n      display: block;\n    }\n  }\n  width: ${props => getStylePerProps(props).width};\n  ${breakpoints.tablet} {\n    position: relative;\n    max-width: ${props => (props.open ? '375px' : undefined)};\n  }\n`;\n\nconst Module = styled.div`\n  margin-bottom: 1.5rem;\n`;\n\nconst HeaderBar = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default {\n  Container,\n  HeaderBar,\n  Module,\n};\n","import React from 'react';\nimport { APP_THEME, APP_THEME_NAMES } from '../../theme';\nimport Styled from './Styled';\n\nimport Translations, { LANGUAGES } from '../../translations';\n\nimport { ComboBox } from '../Utils';\n\nimport { LANG_FLAG } from '../../utils';\n\nimport './hamburgers.css';\n\ninterface Props {\n  setSettingsStatus: (val: boolean) => void;\n  settingsOpen: boolean;\n  translations: typeof Translations;\n  selectLanguage: (language: string) => void;\n  selectedTheme: APP_THEME;\n  selectTheme: (themeName: APP_THEME) => void;\n}\n\nconst HamburgerMenu = ({\n  toggle,\n  open,\n}: {\n  toggle: () => void;\n  open: boolean;\n}) => {\n  const extraClassName = open ? ['is-active'] : [];\n  return (\n    <button\n      onClick={() => toggle()}\n      className={['hamburger', 'hamburger--collapse']\n        .concat(extraClassName)\n        .join(' ')}\n      type=\"button\"\n      aria-label=\"Menu\"\n      aria-controls=\"navigation\"\n      aria-expanded={open}\n    >\n      <span className=\"hamburger-box\">\n        <span className=\"hamburger-inner\"></span>\n      </span>\n    </button>\n  );\n};\n\nconst Settings = (props: Props) => {\n  const {\n    settings: __settings__,\n    theme: __theme__,\n    lang: __lang__,\n  } = props.translations;\n  const swipe = React.useRef<Partial<{ swiping: boolean; x: number }>>({});\n\n  const onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    const touch = e.touches[0];\n    swipe.current = { x: touch.clientX };\n  };\n\n  const onTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (e.changedTouches && e.changedTouches.length) {\n      swipe.current.swiping = true;\n    }\n  };\n\n  const onTouchEnd = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (!swipe.current.x) {\n      return;\n    }\n    const touch = e.changedTouches[0];\n    const xDiff = touch.clientX - swipe.current.x;\n    if (xDiff > 50) {\n      props.setSettingsStatus(true);\n    }\n    if (xDiff < -50) {\n      props.setSettingsStatus(false);\n    }\n    swipe.current = {};\n  };\n\n  return (\n    <Styled.Container\n      open={props.settingsOpen}\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n      onClick={() => (!props.settingsOpen ? props.setSettingsStatus(true) : {})}\n    >\n      <Styled.HeaderBar>\n        {props.settingsOpen && <h1>{__settings__.title}</h1>}\n        <HamburgerMenu\n          toggle={() => props.setSettingsStatus(!props.settingsOpen)}\n          open={props.settingsOpen}\n        />\n      </Styled.HeaderBar>\n      {props.settingsOpen && (\n        <React.Fragment>\n          <Styled.Module>\n            <ComboBox<APP_THEME>\n              title={__settings__['setting-theme-label']}\n              choices={APP_THEME_NAMES.map(themeName => ({\n                key: themeName,\n                value: __theme__[themeName],\n              }))}\n              setSelection={props.selectTheme}\n              selection={props.selectedTheme}\n            />\n          </Styled.Module>\n          <Styled.Module>\n            <ComboBox<LANGUAGES>\n              title={__settings__['setting-lang-label']}\n              choices={props.translations\n                .getAvailableLanguages()\n                .map(language => ({\n                  key: language as LANGUAGES,\n                  value: __lang__[language as LANGUAGES],\n                  extra: LANG_FLAG[language as LANGUAGES],\n                }))}\n              setSelection={props.selectLanguage}\n              selection={props.translations.getLanguage() as LANGUAGES}\n            />\n          </Styled.Module>\n        </React.Fragment>\n      )}\n    </Styled.Container>\n  );\n};\n\nexport default Settings;\n","import { css } from '@emotion/core';\nimport { breakpoints, ITheme } from './index';\n\nconst globalStyle = (theme: ITheme) => css`\n  * {\n    font-family: 'Montserrat', sans-serif;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 0;\n    padding: 0;\n    color: ${theme.colors.primary};\n    font-weight: lighter;\n  }\n  p {\n    font-size: 90%;\n    ${breakpoints.tablet} {\n      font-size: 95%;\n    }\n    ${breakpoints.desktop} {\n      font-size: 100%;\n    }\n    padding: 0;\n    margin: 0;\n    font-weight: lighter;\n  }\n  ul {\n    margin: 0;\n    list-style: none;\n    padding: 0;\n  }\n  body {\n    background: ${theme.colors.background};\n    color: ${theme.colors.primary};\n    font-size: 90%;\n    ${breakpoints.tablet} {\n      font-size: 95%;\n    }\n    ${breakpoints.desktop} {\n      font-size: 100%;\n    }\n  }\n`;\n\nexport default globalStyle;\n","import LocalizedStrings from 'react-localization';\nimport ITranslation from './translationKeys';\n\nexport type LANGUAGES = keyof typeof translations.lang;\n\nconst translations: ITranslation = new LocalizedStrings({\n  en: {\n    general: {\n      'application-name': 'Flag Trivia',\n      'application-tagline': 'Test your flag knowledge',\n      'loading-text': 'Loading...',\n    },\n    lang: {\n      en: 'English',\n      fi: 'Finnish',\n    },\n    theme: {\n      light: 'Light',\n      dark: 'Dark',\n    },\n    settings: {\n      title: 'Settings',\n      'setting-theme-label': 'Colour theme',\n      'setting-lang-label': 'Language',\n    },\n    game: {\n      'game-over-text': 'Game over',\n      'question-title-label': 'Question {0} / {1}',\n      'status-label': '{0} / {1} correct ({2}%)',\n      'prev-answer-correct-label': 'You answered {0} correctly.',\n      'prev-answer-incorrect-label': 'You answered {0}, correct was {1}.',\n    },\n    landing: {\n      'start-new-game-label': 'Start new game',\n      'select-region-label': 'Region',\n      'select-mode-label': 'Mode',\n      region: {\n        world: 'World',\n        africa: 'Africa',\n        asia: 'Asia',\n        europe: 'Europe',\n        americas: 'Americas',\n        oceania: 'Oceania',\n      },\n      mode: {\n        random: 'Random',\n        similar: 'Similar',\n        region: 'Region',\n      },\n      'select-mode-info-label': {\n        random: 'Choices are selected randomly among possible flags.',\n        similar: 'Choices are selected to be visually similar.',\n        region: 'Choices are selected from same region.',\n      },\n    },\n  },\n  fi: {\n    general: {\n      'application-name': 'Lipputrivia',\n      'application-tagline': 'Testaa lipputietämyksesi',\n      'loading-text': 'Ladataan...',\n    },\n    lang: {\n      en: 'englanti',\n      fi: 'suomi',\n    },\n    theme: {\n      light: 'Valoisa',\n      dark: 'Tumma',\n    },\n    settings: {\n      title: 'Asetukset',\n      'setting-theme-label': 'Väriteema',\n      'setting-lang-label': 'Kieli',\n    },\n    game: {\n      'game-over-text': 'Peli ohi',\n      'question-title-label': 'Kysymys {0} / {1}',\n      'status-label': '{0} / {1} oikein ({2}%)',\n      'prev-answer-correct-label': 'Vastasit maan {0} oikein.',\n      'prev-answer-incorrect-label': 'Vastasit {0}, kyseessä oli {1}.',\n    },\n    landing: {\n      'start-new-game-label': 'Aloita uusi peli',\n      'select-region-label': 'Alue',\n      'select-mode-label': 'Pelimuoto',\n      region: {\n        world: 'Maailma',\n        africa: 'Afrikka',\n        asia: 'Aasia',\n        europe: 'Eurooppa',\n        americas: 'Amerikat',\n        oceania: 'Oseania',\n      },\n      mode: {\n        random: 'Satunnainen',\n        similar: 'Samankaltaiset',\n        region: 'Alue',\n      },\n      'select-mode-info-label': {\n        random: 'Vaihtoehdot on valittu kaikkien lippujen joukosta.',\n        similar: 'Vaihtoehdot ovat samankaltaisia.',\n        region: 'Vaihtoehdot ovat samalta alueelta.',\n      },\n    },\n  },\n});\n\nexport default translations;\n","import styled from './theme/styled';\nimport { breakpoints } from './theme';\n\ninterface Props {\n  settingsOpen: boolean;\n}\n\nconst Container = styled.div<Props>`\n  display: grid;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: ${props => props.theme.colors.background};\n  grid-template-rows: 100%;\n  grid-template-areas: 'settings app';\n  grid-template-columns: ${props =>\n    props.settingsOpen ? '100% 0%' : 'auto 1fr'};\n  ${breakpoints.tablet} {\n    grid-template-columns: auto 1fr;\n  }\n  .Toastify__toast-container {\n    opacity: 0.98;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-radius: 0.5rem;\n    width: 100vw;\n    padding: 0;\n    left: 0;\n    margin: 0;\n    ${breakpoints.mobile} {\n      left: unset;\n      border-top-left-radius: 0.5rem;\n      border-top-right-radius: 0.5rem;\n      padding-top: 1rem;\n      padding-right: 1rem;\n      width: unset;\n      max-width: 600px;\n    }\n  }\n\n  .Toastify__toast--default {\n    background: ${props => props.theme.elements.color1};\n  }\n\n  .Toastify__progress-bar--default {\n    background: ${props => props.theme.elements.color2};\n  }\n\n  .Toastify__toast {\n    border-radius: 0.5rem !important;\n    color: ${props => props.theme.colors.primary};\n  }\n`;\n\nconst AppContainer = styled.div`\n  grid-area: app;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n  display: grid;\n  grid-template-areas:\n    'header'\n    'content';\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  position: relative;\n  height: auto;\n  overflow: auto;\n`;\n\nexport default {\n  AppContainer,\n  Container,\n};\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Header from './Components/Header';\nimport Landing from './Components/Landing';\nimport Game from './Components/Game';\nimport Settings from './Components/Settings';\n\nimport { Global } from '@emotion/core';\nimport { ThemeProvider } from 'emotion-theming';\nimport globalStyle from './theme/globalStyle';\nimport { currentTheme, getThemeByName, APP_THEME } from './theme';\n\nimport translations from './translations';\n\nimport Styled from './Styled';\n\nfunction useForceUpdate() {\n  const [value, set] = React.useState(true); //boolean state\n  return () => set(value => !value); // toggle the state to force render\n}\n\nconst App = () => {\n  const [settingsOpen, setSettingsStatus] = React.useState(false);\n  const [theme, setTheme] = React.useState(currentTheme());\n\n  const forceUpdate = useForceUpdate();\n\n  const changeLanguage = React.useCallback((language: string) => {\n    translations.setLanguage(language);\n    forceUpdate();\n  }, []);\n\n  const selectTheme = React.useCallback((themeName: APP_THEME) => {\n    setTheme(getThemeByName(themeName));\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme.value}>\n      <Global styles={globalStyle(theme.value)} />\n      <Styled.Container settingsOpen={settingsOpen}>\n        <Settings\n          settingsOpen={settingsOpen}\n          setSettingsStatus={setSettingsStatus}\n          selectLanguage={changeLanguage}\n          selectedTheme={theme.name}\n          selectTheme={selectTheme}\n          translations={translations}\n        />\n        <Styled.AppContainer>\n          <Header translations={translations} />\n          <div\n            style={{\n              gridArea: 'content',\n              padding: '0 2rem 2rem 2rem',\n              maxWidth: '960px',\n            }}\n          >\n            <Switch>\n              <Route\n                path=\"/\"\n                exact={true}\n                render={props => (\n                  <Landing translations={translations} {...props} />\n                )}\n              />\n              <Route\n                path=\"/quiz/:mode/:region\"\n                render={props => (\n                  <Game translations={translations} {...props} />\n                )}\n              />\n              <Redirect exact={true} from=\"/quiz\" to=\"/quiz/random/world\" />\n              <Redirect from=\"/quiz/*\" to=\"/quiz/random/world\" />\n              <Redirect from=\"/*\" to=\"/\" />\n            </Switch>\n          </div>\n        </Styled.AppContainer>\n      </Styled.Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />,\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import styled from '../../theme/styled';\nimport { breakpoints } from '../../theme/index';\n\nconst Container = styled.div`\n  display: grid;\n  height: 100%;\n  grid-column-gap: 2rem;\n  grid-row-gap: 2rem;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  grid-template-areas:\n    'progress'\n    'question';\n`;\n\nconst ProgressBar = styled.div`\n  grid-area: progress;\n  width: 100%;\n  height: auto;\n`;\n\nconst QuestonContainer = styled.div`\n  grid-area: question;\n  display: grid;\n  height: 100%;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto auto;\n  column-gap: 2rem;\n  row-gap: 2rem;\n  grid-template-areas:\n    'flag'\n    'choice';\n  ${breakpoints.tablet} {\n    grid-template-columns: 1fr min-content;\n    grid-template-rows: 1fr;\n    grid-template-areas: 'flag choice';\n  }\n`;\n\nconst QuestionFlagContainer = styled.div`\n  grid-area: flag;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  > img {\n    width: inherit;\n    max-height: 100%;\n    object-position: center;\n    object-fit: contain;\n    position: absolute;\n    background: transparent;\n    filter: drop-shadow(0px 2px 5px rgba(0, 0, 0, 0.15));\n    box-sizing: border-box;\n  }\n`;\n\nconst QuestionChoiceContainer = styled.div`\n  grid-area: choice;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  button {\n    margin-top: 1rem;\n    &:first-child {\n      margin-top: 0rem;\n    }\n  }\n  ${breakpoints.tablet} {\n    min-width: 200px;\n  }\n`;\n\nconst ToastContainer = styled.div<{ src: string }>`\n  display: flex;\n  align-items: center;\n  > div {\n    width: 64px;\n    height: 32px;\n    margin: 0.5rem;\n    box-shadow: ${props => props.theme.boxShadow};\n    background-image: ${props => `url(${props.src})`};\n    background-size: cover;\n    background-position: center center;\n    margin-right: 1rem;\n  }\n`;\n\nexport default {\n  Container,\n  ProgressBar,\n  ToastContainer,\n  Question: {\n    Container: QuestonContainer,\n    FlagContainer: QuestionFlagContainer,\n    ChoiceContainer: QuestionChoiceContainer,\n  },\n};\n","import styled, { CreateStyled } from '@emotion/styled';\nimport { ITheme } from './index';\n\nexport default styled as CreateStyled<ITheme>;\n","export const breakpoints = {\n  mobile: `@media (min-width: 480px)`,\n  tablet: `@media (min-width: 768px)`,\n  desktop: `@media (min-width: 1200px)`,\n};\n\nexport interface ITheme {\n  colors: {\n    primary: React.CSSProperties['color'];\n    border: React.CSSProperties['color'];\n    background: React.CSSProperties['color'];\n    highlight: React.CSSProperties['color'];\n  };\n  elements: {\n    color1: React.CSSProperties['color'];\n    color2: React.CSSProperties['color'];\n  };\n  borderRadius: React.CSSProperties['borderRadius'];\n  boxShadow: React.CSSProperties['boxShadow'];\n  smallBoxShadow: React.CSSProperties['boxShadow'];\n}\n\nconst lightTheme: ITheme = {\n  colors: {\n    background: '#f5f5f5',\n    primary: '#333',\n    border: '#e1e1e1',\n    highlight: '#fff',\n  },\n  elements: {\n    color1: '#f9f9f9',\n    color2: '#e9e9e9',\n  },\n  borderRadius: '0.5rem',\n  boxShadow: '0px 5px 10px 0px rgba(0,0,0,0.25)',\n  smallBoxShadow: '0px 1px 1px 0px rgba(0,0,0,0.05)',\n};\n\nconst darkTheme: ITheme = {\n  colors: {\n    background: '#2A2A2E',\n    primary: '#eee',\n    border: '#2E2E2A',\n    highlight: '#333',\n  },\n  elements: {\n    color1: '#575757',\n    color2: '#4A4A4A',\n  },\n  borderRadius: '0.5rem',\n  boxShadow: '0px 5px 10px 0px rgba(0,0,0,0.25)',\n  smallBoxShadow: '0px 1px 1px 0px rgba(0,0,0,0.05)',\n};\n\nexport type APP_THEME = 'light' | 'dark';\n\nconst APP_THEMES: {\n  [key in APP_THEME]: ITheme;\n} = {\n  light: lightTheme,\n  dark: darkTheme,\n};\n\nexport const APP_THEME_NAMES = Object.keys(APP_THEMES) as APP_THEME[];\n\nexport const getThemeByName = (\n  name: APP_THEME,\n): {\n  name: APP_THEME;\n  value: ITheme;\n} => ({\n  name,\n  value: APP_THEMES[name],\n});\n\nexport const currentTheme = (): {\n  name: APP_THEME;\n  value: ITheme;\n} => {\n  const currentThemeName = localStorage.getItem('app_theme');\n  const theme = APP_THEMES[currentThemeName as APP_THEME];\n  if (!currentThemeName || !theme) {\n    return getThemeByName('light');\n  }\n  return getThemeByName(currentThemeName as APP_THEME);\n};\n"],"sourceRoot":""}